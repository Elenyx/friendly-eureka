{
  "id": "97b49d2e-829c-465c-85bb-e3217a2dc2fe",
  "prevId": "00000000-0000-0000-0000-000000000000",
  "version": "7",
  "dialect": "postgresql",
  "tables": {
    "public.battles": {
      "name": "battles",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "attacker": {
          "name": "attacker",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "defender": {
          "name": "defender",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "attacker_ship": {
          "name": "attacker_ship",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "defender_ship": {
          "name": "defender_ship",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "winner": {
          "name": "winner",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "battle_data": {
          "name": "battle_data",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": true
        },
        "rewards": {
          "name": "rewards",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": true,
          "default": "'{}'::jsonb"
        },
        "battle_type": {
          "name": "battle_type",
          "type": "varchar(20)",
          "primaryKey": false,
          "notNull": true,
          "default": "'pvp'"
        },
        "sector_id": {
          "name": "sector_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "battles_attacker_idx": {
          "name": "battles_attacker_idx",
          "columns": [
            {
              "expression": "attacker",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "battles_defender_idx": {
          "name": "battles_defender_idx",
          "columns": [
            {
              "expression": "defender",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "battles_winner_idx": {
          "name": "battles_winner_idx",
          "columns": [
            {
              "expression": "winner",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "battles_created_at_idx": {
          "name": "battles_created_at_idx",
          "columns": [
            {
              "expression": "created_at",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "battles_attacker_users_id_fk": {
          "name": "battles_attacker_users_id_fk",
          "tableFrom": "battles",
          "tableTo": "users",
          "columnsFrom": [
            "attacker"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "battles_defender_users_id_fk": {
          "name": "battles_defender_users_id_fk",
          "tableFrom": "battles",
          "tableTo": "users",
          "columnsFrom": [
            "defender"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "battles_attacker_ship_ships_id_fk": {
          "name": "battles_attacker_ship_ships_id_fk",
          "tableFrom": "battles",
          "tableTo": "ships",
          "columnsFrom": [
            "attacker_ship"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "battles_defender_ship_ships_id_fk": {
          "name": "battles_defender_ship_ships_id_fk",
          "tableFrom": "battles",
          "tableTo": "ships",
          "columnsFrom": [
            "defender_ship"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "battles_winner_users_id_fk": {
          "name": "battles_winner_users_id_fk",
          "tableFrom": "battles",
          "tableTo": "users",
          "columnsFrom": [
            "winner"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "battles_sector_id_sectors_id_fk": {
          "name": "battles_sector_id_sectors_id_fk",
          "tableFrom": "battles",
          "tableTo": "sectors",
          "columnsFrom": [
            "sector_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.explorations": {
      "name": "explorations",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "sector_id": {
          "name": "sector_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "ship_id": {
          "name": "ship_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "action_type": {
          "name": "action_type",
          "type": "varchar(30)",
          "primaryKey": false,
          "notNull": true
        },
        "energy_cost": {
          "name": "energy_cost",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "results": {
          "name": "results",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": true
        },
        "rewards": {
          "name": "rewards",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": true,
          "default": "'{}'::jsonb"
        },
        "success": {
          "name": "success",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "explorations_user_idx": {
          "name": "explorations_user_idx",
          "columns": [
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "explorations_sector_idx": {
          "name": "explorations_sector_idx",
          "columns": [
            {
              "expression": "sector_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "explorations_created_at_idx": {
          "name": "explorations_created_at_idx",
          "columns": [
            {
              "expression": "created_at",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "explorations_user_id_users_id_fk": {
          "name": "explorations_user_id_users_id_fk",
          "tableFrom": "explorations",
          "tableTo": "users",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "explorations_sector_id_sectors_id_fk": {
          "name": "explorations_sector_id_sectors_id_fk",
          "tableFrom": "explorations",
          "tableTo": "sectors",
          "columnsFrom": [
            "sector_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "explorations_ship_id_ships_id_fk": {
          "name": "explorations_ship_id_ships_id_fk",
          "tableFrom": "explorations",
          "tableTo": "ships",
          "columnsFrom": [
            "ship_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.guild_members": {
      "name": "guild_members",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "guild_id": {
          "name": "guild_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "role": {
          "name": "role",
          "type": "varchar(20)",
          "primaryKey": false,
          "notNull": true,
          "default": "'member'"
        },
        "contribution": {
          "name": "contribution",
          "type": "numeric(20, 2)",
          "primaryKey": false,
          "notNull": true,
          "default": "'0.00'"
        },
        "joined_at": {
          "name": "joined_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "guild_members_guild_user_idx": {
          "name": "guild_members_guild_user_idx",
          "columns": [
            {
              "expression": "guild_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "guild_members_guild_idx": {
          "name": "guild_members_guild_idx",
          "columns": [
            {
              "expression": "guild_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "guild_members_guild_id_guilds_id_fk": {
          "name": "guild_members_guild_id_guilds_id_fk",
          "tableFrom": "guild_members",
          "tableTo": "guilds",
          "columnsFrom": [
            "guild_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "guild_members_user_id_users_id_fk": {
          "name": "guild_members_user_id_users_id_fk",
          "tableFrom": "guild_members",
          "tableTo": "users",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.guilds": {
      "name": "guilds",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "leader_id": {
          "name": "leader_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "treasury": {
          "name": "treasury",
          "type": "numeric(20, 2)",
          "primaryKey": false,
          "notNull": true,
          "default": "'0.00'"
        },
        "level": {
          "name": "level",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 1
        },
        "experience": {
          "name": "experience",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "member_limit": {
          "name": "member_limit",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 10
        },
        "is_recruiting": {
          "name": "is_recruiting",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": true
        },
        "requirements": {
          "name": "requirements",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": true,
          "default": "'{}'::jsonb"
        },
        "perks": {
          "name": "perks",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": true,
          "default": "'{}'::jsonb"
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "guilds_name_idx": {
          "name": "guilds_name_idx",
          "columns": [
            {
              "expression": "name",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "guilds_leader_idx": {
          "name": "guilds_leader_idx",
          "columns": [
            {
              "expression": "leader_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "guilds_leader_id_users_id_fk": {
          "name": "guilds_leader_id_users_id_fk",
          "tableFrom": "guilds",
          "tableTo": "users",
          "columnsFrom": [
            "leader_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "guilds_name_unique": {
          "name": "guilds_name_unique",
          "nullsNotDistinct": false,
          "columns": [
            "name"
          ]
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.inventory": {
      "name": "inventory",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "item_id": {
          "name": "item_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "quantity": {
          "name": "quantity",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 1
        },
        "acquired_at": {
          "name": "acquired_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "inventory_user_item_idx": {
          "name": "inventory_user_item_idx",
          "columns": [
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "item_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "inventory_user_id_idx": {
          "name": "inventory_user_id_idx",
          "columns": [
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "inventory_user_id_users_id_fk": {
          "name": "inventory_user_id_users_id_fk",
          "tableFrom": "inventory",
          "tableTo": "users",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "inventory_item_id_items_id_fk": {
          "name": "inventory_item_id_items_id_fk",
          "tableFrom": "inventory",
          "tableTo": "items",
          "columnsFrom": [
            "item_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.items": {
      "name": "items",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "item_type": {
          "name": "item_type",
          "type": "varchar(50)",
          "primaryKey": false,
          "notNull": true
        },
        "rarity": {
          "name": "rarity",
          "type": "varchar(20)",
          "primaryKey": false,
          "notNull": true,
          "default": "'common'"
        },
        "value": {
          "name": "value",
          "type": "numeric(20, 2)",
          "primaryKey": false,
          "notNull": true,
          "default": "'0.00'"
        },
        "stackable": {
          "name": "stackable",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": true
        },
        "max_stack": {
          "name": "max_stack",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 100
        },
        "stats": {
          "name": "stats",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": true,
          "default": "'{}'::jsonb"
        },
        "requirements": {
          "name": "requirements",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": true,
          "default": "'{}'::jsonb"
        },
        "effects": {
          "name": "effects",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": true,
          "default": "'{}'::jsonb"
        },
        "is_active": {
          "name": "is_active",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": true
        }
      },
      "indexes": {
        "items_type_idx": {
          "name": "items_type_idx",
          "columns": [
            {
              "expression": "item_type",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "items_rarity_idx": {
          "name": "items_rarity_idx",
          "columns": [
            {
              "expression": "rarity",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.market_listings": {
      "name": "market_listings",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "seller_id": {
          "name": "seller_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "item_id": {
          "name": "item_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "quantity": {
          "name": "quantity",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "price_per_unit": {
          "name": "price_per_unit",
          "type": "numeric(20, 2)",
          "primaryKey": false,
          "notNull": true
        },
        "total_price": {
          "name": "total_price",
          "type": "numeric(20, 2)",
          "primaryKey": false,
          "notNull": true
        },
        "is_active": {
          "name": "is_active",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "expires_at": {
          "name": "expires_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {
        "market_seller_idx": {
          "name": "market_seller_idx",
          "columns": [
            {
              "expression": "seller_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "market_item_idx": {
          "name": "market_item_idx",
          "columns": [
            {
              "expression": "item_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "market_active_idx": {
          "name": "market_active_idx",
          "columns": [
            {
              "expression": "is_active",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "market_price_idx": {
          "name": "market_price_idx",
          "columns": [
            {
              "expression": "price_per_unit",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "market_listings_seller_id_users_id_fk": {
          "name": "market_listings_seller_id_users_id_fk",
          "tableFrom": "market_listings",
          "tableTo": "users",
          "columnsFrom": [
            "seller_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "market_listings_item_id_items_id_fk": {
          "name": "market_listings_item_id_items_id_fk",
          "tableFrom": "market_listings",
          "tableTo": "items",
          "columnsFrom": [
            "item_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.sectors": {
      "name": "sectors",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "coordinates": {
          "name": "coordinates",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "sector_type": {
          "name": "sector_type",
          "type": "varchar(50)",
          "primaryKey": false,
          "notNull": true,
          "default": "'unexplored'"
        },
        "difficulty": {
          "name": "difficulty",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 1
        },
        "resources": {
          "name": "resources",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": true,
          "default": "'{}'::jsonb"
        },
        "hazards": {
          "name": "hazards",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": true,
          "default": "'{}'::jsonb"
        },
        "discovered_by": {
          "name": "discovered_by",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "discovered_at": {
          "name": "discovered_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        },
        "visit_count": {
          "name": "visit_count",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "last_visited": {
          "name": "last_visited",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        },
        "is_special": {
          "name": "is_special",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        },
        "special_data": {
          "name": "special_data",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": true,
          "default": "'{}'::jsonb"
        }
      },
      "indexes": {
        "sectors_coordinates_idx": {
          "name": "sectors_coordinates_idx",
          "columns": [
            {
              "expression": "coordinates",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "sectors_discovered_by_idx": {
          "name": "sectors_discovered_by_idx",
          "columns": [
            {
              "expression": "discovered_by",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "sectors_type_idx": {
          "name": "sectors_type_idx",
          "columns": [
            {
              "expression": "sector_type",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "sectors_discovered_by_users_id_fk": {
          "name": "sectors_discovered_by_users_id_fk",
          "tableFrom": "sectors",
          "tableTo": "users",
          "columnsFrom": [
            "discovered_by"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "sectors_coordinates_unique": {
          "name": "sectors_coordinates_unique",
          "nullsNotDistinct": false,
          "columns": [
            "coordinates"
          ]
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.ships": {
      "name": "ships",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "ship_type": {
          "name": "ship_type",
          "type": "varchar(50)",
          "primaryKey": false,
          "notNull": true,
          "default": "'explorer'"
        },
        "hull": {
          "name": "hull",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 100
        },
        "max_hull": {
          "name": "max_hull",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 100
        },
        "shields": {
          "name": "shields",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 50
        },
        "max_shields": {
          "name": "max_shields",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 50
        },
        "attack": {
          "name": "attack",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 20
        },
        "defense": {
          "name": "defense",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 15
        },
        "speed": {
          "name": "speed",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 10
        },
        "cargo": {
          "name": "cargo",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 100
        },
        "max_cargo": {
          "name": "max_cargo",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 100
        },
        "fuel": {
          "name": "fuel",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 100
        },
        "max_fuel": {
          "name": "max_fuel",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 100
        },
        "experience": {
          "name": "experience",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "level": {
          "name": "level",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 1
        },
        "is_active": {
          "name": "is_active",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": true
        },
        "upgrades": {
          "name": "upgrades",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": true,
          "default": "'{}'::jsonb"
        },
        "cosmetics": {
          "name": "cosmetics",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": true,
          "default": "'{}'::jsonb"
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "ships_user_id_idx": {
          "name": "ships_user_id_idx",
          "columns": [
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "ships_active_idx": {
          "name": "ships_active_idx",
          "columns": [
            {
              "expression": "is_active",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "ships_user_id_users_id_fk": {
          "name": "ships_user_id_users_id_fk",
          "tableFrom": "ships",
          "tableTo": "users",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.users": {
      "name": "users",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "discord_id": {
          "name": "discord_id",
          "type": "varchar(20)",
          "primaryKey": false,
          "notNull": true
        },
        "username": {
          "name": "username",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "avatar": {
          "name": "avatar",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "nexium_crystals": {
          "name": "nexium_crystals",
          "type": "numeric(20, 2)",
          "primaryKey": false,
          "notNull": true,
          "default": "'1000.00'"
        },
        "energy": {
          "name": "energy",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 100
        },
        "max_energy": {
          "name": "max_energy",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 100
        },
        "last_energy_restore": {
          "name": "last_energy_restore",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "rank": {
          "name": "rank",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "total_explored": {
          "name": "total_explored",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "total_battles_won": {
          "name": "total_battles_won",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "joined_at": {
          "name": "joined_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "last_active": {
          "name": "last_active",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "users_discord_id_idx": {
          "name": "users_discord_id_idx",
          "columns": [
            {
              "expression": "discord_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "users_rank_idx": {
          "name": "users_rank_idx",
          "columns": [
            {
              "expression": "rank",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "users_discord_id_unique": {
          "name": "users_discord_id_unique",
          "nullsNotDistinct": false,
          "columns": [
            "discord_id"
          ]
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    }
  },
  "enums": {},
  "schemas": {},
  "sequences": {},
  "roles": {},
  "policies": {},
  "views": {},
  "_meta": {
    "columns": {},
    "schemas": {},
    "tables": {}
  }
}